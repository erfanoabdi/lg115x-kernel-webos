/*
	SIC LABORATORY, LG ELECTRONICS INC., SEOUL, KOREA
	Copyright(c) 2013 by LG Electronics Inc.

	This program is free software; you can redistribute it and/or 
	modify it under the terms of the GNU General Public License
	version 2 as published by the Free Software Foundation.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of 
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
	GNU General Public License for more details.
*/ 


/** @file
 *
 *  MMCU register details. ( used only within kdriver )
 *
 *  author     Youngwoo Jin (youngwoo.jin@lge.com)
 *  version    1.0
 *  date       2013.02.04
 *
 */

#ifndef __MMCU_REG_H__
#define __MMCU_REG_H__

/*----------------------------------------------------------------------------------------
    Control Constants
----------------------------------------------------------------------------------------*/

/*----------------------------------------------------------------------------------------
    File Inclusions
----------------------------------------------------------------------------------------*/
#include "base_types.h"

#ifdef __cplusplus
extern "C" {
#endif

/*-----------------------------------------------------------------------------
	0x0000 proc_ctrl ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	runstall                       :  1,	//     0
	vector_sel                     :  1,	//     1
	pdbg_en                        :  1,	//     2
	                               : 25,	//  3:27 reserved
	sw_reset                       :  1;	//    28
} PROC_CTRL;

/*-----------------------------------------------------------------------------
	0x0004 proc_id ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	proc_id                        : 16,	//  0:15
	proc_st                        :  8;	// 16:23
} PROC_ID;

/*-----------------------------------------------------------------------------
	0x0008 pdbg_data ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	pdbg_data                      : 32;	//  0:31
} PDBG_DATA;

/*-----------------------------------------------------------------------------
	0x000C pdbg_pc ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	pdbg_pc                        : 32;	//  0:31
} PDBG_PC;

/*-----------------------------------------------------------------------------
	0x0010 srom_offset ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	srom_offset                    : 32;	//  0:31
} SROM_OFFSET;

/*-----------------------------------------------------------------------------
	0x0014 sram_offset_0 ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	sram_offset_0                  : 32;	//  0:31
} SRAM_OFFSET_0;

/*-----------------------------------------------------------------------------
	0x0018 sram_offset_1 ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	sram_offset_1                  : 32;	//  0:31
} SRAM_OFFSET_1;

/*-----------------------------------------------------------------------------
	0x001C sram_offset_2 ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	sram_offset_2                  : 32;	//  0:31
} SRAM_OFFSET_2;

/*-----------------------------------------------------------------------------
	0x0130 e_intr_en ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	                               :  9,	//  0: 8 reserved
	dma                            :  1,	//     9
	ipc                            :  1;	//    10
} E_INTR_EN;

/*-----------------------------------------------------------------------------
	0x0134 e_intr_st ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	                               :  9,	//  0: 8 reserved
	dma                            :  1,	//     9
	ipc                            :  1;	//    10
} E_INTR_ST;

/*-----------------------------------------------------------------------------
	0x0138 e_intr_cl ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	                               :  9,	//  0: 8 reserved
	dma                            :  1,	//     9
	ipc                            :  1;	//    10
} E_INTR_CL;

/*-----------------------------------------------------------------------------
	0x013C e_intr_ev ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	ipc                            :  1;	//     0
} E_INTR_EV;

/*-----------------------------------------------------------------------------
	0x0140 i_intr_en ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	                               :  9,	//  0: 8 reserved
	dma                            :  1,	//     9
	ipc                            :  1;	//    10
} I_INTR_EN;

/*-----------------------------------------------------------------------------
	0x0144 i_intr_st ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	                               :  9,	//  0: 8 reserved
	dma                            :  1,	//     9
	ipc                            :  1;	//    10
} I_INTR_ST;

/*-----------------------------------------------------------------------------
	0x0148 i_intr_cl ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	                               :  9,	//  0: 8 reserved
	dma                            :  1,	//     9
	ipc                            :  1;	//    10
} I_INTR_CL;

/*-----------------------------------------------------------------------------
	0x014C i_intr_ev ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	ipc                            :  1;	//     0
} I_INTR_EV;

/*-----------------------------------------------------------------------------
	0x0180 apbbr_pri ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	mcu_xlmi_pri                   :  4,	//  0: 3
	host_pri                       :  4,	//  4: 7
	mcu_apb_pri                    :  4;	//  8:11
} APBBR_PRI;

/*-----------------------------------------------------------------------------
	0x0190 dec_mcu_ver ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	yyyymmdd                       : 32;	//  0:31
} DEC_MCU_VER;

/*-----------------------------------------------------------------------------
	0x0D00 tx_locked_id ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	tx_locked_id                   : 32;	//  0:31
} TX_LOCKED_ID;

/*-----------------------------------------------------------------------------
	0x0D04 tx_src_addr ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	tx_src_addr                    : 32;	//  0:31
} TX_SRC_ADDR;

/*-----------------------------------------------------------------------------
	0x0D08 tx_dst_addr ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	tx_dst_addr                    : 32;	//  0:31
} TX_DST_ADDR;

/*-----------------------------------------------------------------------------
	0x0D0C tx_nxt_addr ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	tx_nxt_addr                    : 32;	//  0:31
} TX_NXT_ADDR;

/*-----------------------------------------------------------------------------
	0x0D10 tx_length ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	tx_length                      : 32;	//  0:31
} TX_LENGTH;

/*-----------------------------------------------------------------------------
	0x0D14 tx_ctrl ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	tx_start                       :  1,	//     0
	tx_dir                         :  3,	//  1: 3
	tx_nxt_dir                     :  1,	//     4
	                               :  3,	//  5: 7
	tx_done                        :  1,	//     8
	tx_lock                        :  1,	//     9
	tx_swt_en                      :  1,	//    10
	                               :  1,	//    11
	tx_asize                       :  3,	// 12:14
	                               :  1,	//    15
	pat_mode                       :  3,	// 16:18
	                               :  1,	//    19
	pat_ainc                       :  1;	//    20
} TX_CTRL;

/*-----------------------------------------------------------------------------
	0x0D18 pat_addr ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	pat_addr                       : 32;	//  0:31
} PAT_ADDR;

/*-----------------------------------------------------------------------------
	0x0D1C pat_data ''
------------------------------------------------------------------------------*/
typedef struct {
	UINT32
	pat_data                       : 32;	//  0:31
} PAT_DATA;

typedef struct {
	PROC_CTRL                       	proc_ctrl                       ;	// 0x0000 : ''
	PROC_ID                         	proc_id                         ;	// 0x0004 : ''
	PDBG_DATA                       	pdbg_data                       ;	// 0x0008 : ''
	PDBG_PC                         	pdbg_pc                         ;	// 0x000C : ''
	SROM_OFFSET                     	srom_offset                     ;	// 0x0010 : ''
	SRAM_OFFSET_0                   	sram_offset_0                   ;	// 0x0014 : ''
	SRAM_OFFSET_1                   	sram_offset_1                   ;	// 0x0018 : ''
	SRAM_OFFSET_2                   	sram_offset_2                   ;	// 0x001C : ''
	UINT32                          	                 __rsvd_00[  68];	// 0x0020 ~ 0x012C
	E_INTR_EN                       	e_intr_en                       ;	// 0x0130 : ''
	E_INTR_ST                       	e_intr_st                       ;	// 0x0134 : ''
	E_INTR_CL                       	e_intr_cl                       ;	// 0x0138 : ''
	E_INTR_EV                       	e_intr_ev                       ;	// 0x013C : ''
	I_INTR_EN                       	i_intr_en                       ;	// 0x0140 : ''
	I_INTR_ST                       	i_intr_st                       ;	// 0x0144 : ''
	I_INTR_CL                       	i_intr_cl                       ;	// 0x0148 : ''
	I_INTR_EV                       	i_intr_ev                       ;	// 0x014C : ''
	UINT32                          	                 __rsvd_01[  12];	// 0x0150 ~ 0x017C
	APBBR_PRI                       	apbbr_pri                       ;	// 0x0180 : ''
	UINT32                          	                 __rsvd_02[   3];	// 0x0184 ~ 0x018C
	DEC_MCU_VER                     	dec_mcu_ver                     ;	// 0x0190 : ''
	UINT32                          	                 __rsvd_03[ 731];	// 0x0194 ~ 0x0CFC
	TX_LOCKED_ID                    	tx_locked_id                    ;	// 0x0D00 : ''
	TX_SRC_ADDR                      	tx_src_addr                     ;	// 0x0D04 : ''
	TX_DST_ADDR                      	tx_dst_addr                     ;	// 0x0D08 : ''
	TX_NXT_ADDR                      	tx_nxt_addr                     ;	// 0x0D0C : ''
	TX_LENGTH                       	tx_length                       ;	// 0x0D10 : ''
	TX_CTRL                         	tx_ctrl                         ;	// 0x0D14 : ''
	PAT_ADDR                        	pat_addr                        ;	// 0x0D18 : ''
	PAT_DATA                        	pat_data                        ;	// 0x0D1C : ''
} reg_mcu_top_t;

#endif /* __MMCU_REG_H__ */


